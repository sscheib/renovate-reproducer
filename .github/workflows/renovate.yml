---
name: 'Renovate'
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      repoCache:
        description: 'Reset or disable the cache?'
        type: 'choice'
        default: 'enabled'
        options:
          - 'enabled'
          - 'disabled'
          - 'reset'

      renovateLogLevel:
        description: 'Renovate Log Level'
        type: 'choice'
        default: 'debug'
        options:
          - 'debug'
          - 'info'
          - 'warn'
          - 'error'
          - 'fatal'

# Declare default permissions as read only
permissions: 'read-all'

# Adding these as env variables makes it easy to re-use them in different steps and in bash.
env:
  cache_archive: 'renovate_cache.tar.gz'
  # This is the dir renovate provides
  # If we set our own directory via cacheDir, we can run into permissions issues.
  # It is also possible to cache a higher level of the directory, but it has minimal benefit. While renovate execution
  # time gets faster, it also takes longer to upload the cache as it grows bigger.
  cache_dir: '/tmp/renovate/cache/renovate/repository'
  # This can be manually changed to bust the cache if neccessary.
  cache_key: 'renovate-cache'

jobs:
  renovate:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'write'
      pull-requests: 'write'
    steps:
      - name: 'Harden Runner'
        uses: 'step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde' # v2.9.1
        with:
          egress-policy: 'block'
          allowed-endpoints: >
            api.github.com:443
            console.redhat.com:443
            galaxy.ansible.com:443
            ghcr.io:443
            github.com:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            pypi.org:443
            registry.npmjs.org:443
            registry.redhat.io:443
            sso.redhat.com:443

      - name: 'Checkout the repository'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # v4.1.7

      - name: 'Download cache of the previous workflow run'
        uses: 'dawidd6/action-download-artifact@bf251b5aa9c2f7eeb574a96ee720e24f801b7c11' # v6
        if: "github.event.inputs.repoCache != 'disabled'"
        continue-on-error: true
        with:
          name: '${{ env.cache_key }}'
          path: 'cache-download'

      - name: 'Extract Renovate cache to improve performance'
        if: "github.event.inputs.repoCache != 'disabled'"
        run: |
          set -x
          # Skip if no cache is set, such as the first time it runs.
          if [ ! -d cache-download ] ; then
            echo "No cache found."
            exit 0
          fi

          # Make sure the directory exists, and extract it there. Note that it's nested in the download directory.
          mkdir -p "${cache_dir}"
          tar -xzf "cache-download/${cache_archive}" -C "${cache_dir}"

          # Unfortunately, the permissions expected within renovate's docker container
          # are different than the ones given after the cache is restored. We have to
          # change ownership to solve this. We also need to have correct permissions in
          # the entire /tmp/renovate tree, not just the section with the repo cache.
          sudo chown -R "runneradmin:root" "/tmp/renovate/"
          ls -R "${cache_dir}"

      - name: 'Authenticate to console.redhat.com'
        run: |
          # exit immediately if a command fails
          set -o errexit

          # make the whole pipe fail if any commands within the pipe fail
          set -o pipefail

          # treats unset variables as an error while performing parameter expansion
          # special parameters $* and $@ are not affected from this
          set -o nounset

          # set the parameters for curl
          params=(
            "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
            "-d"
            "grant_type=refresh_token"
            "-d"
            "client_id=cloud-services"
            "-d"
            "refresh_token=${{ secrets.AUTOMATION_HUB_TOKEN }}"
            "--silent"
            "--show-error"
          )

          # authenticate and retrieve the bearer token  # noqa: line-length
          bearerToken="$(curl "${params[@]}" | jq --raw-output .access_token)"

          # mask the bearer token to prevent leaking
          echo "::add-mask::${bearerToken}"

          # make the bearer token visible to other workflow steps
          echo RENOVATE_AUTOMATION_HUB_AUTH_TOKEN="${bearerToken}" >> "${GITHUB_ENV}"

      - name: 'Run Renovate'
        uses: 'renovatebot/github-action@b266b24b144602ed4f512f0773009d026722f4cc' # v40.2.6
        with:
          # yamllint disable-line rule:line-length
          renovate-version: '38.52.2'
          configurationFile: '.github/renovate_global.js'
          token: '${{ secrets.renovate_token }}'
        env:
          RENOVATE_REPOSITORY_CACHE: "${{ github.event.inputs.repoCache || 'enabled' }}"
          RENOVATE_REPOSITORIES: '${{ github.repository }}'
          RENOVATE_CRC_USERNAME: '${{ secrets.CRC_USERNAME }}'
          RENOVATE_CRC_PASSWORD: '${{ secrets.CRC_PASSWORD }}'
          LOG_LEVEL: "${{ github.event.inputs.renovateLogLevel || 'debug' }}"

      - name: 'Compress Renovate cache to improve performance'
        if: "github.event.inputs.repoCache != 'disabled'"
        run: |
          # The -C is important, as otherwise we end up extracting the files with
          # their full path, ultimately leading to a nested directory situation.
          tar -czvf "${cache_archive}" -C "${cache_dir}" .

      - name: 'Upload compressed cache'
        uses: 'actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029' # v4.3.5
        if: "github.event.inputs.repoCache != 'disabled'"
        with:
          name: '${{ env.cache_key }}'
          path: '${{ env.cache_archive }}'
          # Since this is updated and restored on every run, we don't need to keep it
          # for long. Just make sure this value is large enough that multiple renovate
          # runs can happen before older cache archives are deleted.
          retention-days: 1
...
